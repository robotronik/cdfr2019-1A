ARM GAS  /tmp/cc9yrPe9.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.SystemClock_Config,"ax",%progbits
  18              		.align	1
  19              		.global	SystemClock_Config
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	SystemClock_Config:
  27              	.LFB127:
  28              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   ** This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * COPYRIGHT(c) 2019 STMicroelectronics
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/main.c    ****   * are permitted provided that the following conditions are met:
  17:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  19:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/main.c    ****   *      and/or other materials provided with the distribution.
  22:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  24:Src/main.c    ****   *      without specific prior written permission.
  25:Src/main.c    ****   *
  26:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
ARM GAS  /tmp/cc9yrPe9.s 			page 2


  31:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/main.c    ****   *
  37:Src/main.c    ****   ******************************************************************************
  38:Src/main.c    ****   */
  39:Src/main.c    **** /* USER CODE END Header */
  40:Src/main.c    **** 
  41:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  42:Src/main.c    **** #include "main.h"
  43:Src/main.c    **** #include "tim.h"
  44:Src/main.c    **** #include "usart.h"
  45:Src/main.c    **** #include "gpio.h"
  46:Src/main.c    **** 
  47:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  48:Src/main.c    **** /* USER CODE BEGIN Includes */
  49:Src/main.c    **** 
  50:Src/main.c    **** /* USER CODE END Includes */
  51:Src/main.c    **** 
  52:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  53:Src/main.c    **** /* USER CODE BEGIN PTD */
  54:Src/main.c    **** 
  55:Src/main.c    **** /* USER CODE END PTD */
  56:Src/main.c    **** 
  57:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  58:Src/main.c    **** /* USER CODE BEGIN PD */
  59:Src/main.c    **** 
  60:Src/main.c    **** /* USER CODE END PD */
  61:Src/main.c    **** 
  62:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  63:Src/main.c    **** /* USER CODE BEGIN PM */
  64:Src/main.c    **** 
  65:Src/main.c    **** /* USER CODE END PM */
  66:Src/main.c    **** 
  67:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  68:Src/main.c    **** 
  69:Src/main.c    **** /* USER CODE BEGIN PV */
  70:Src/main.c    **** int nLoop=0;
  71:Src/main.c    **** /* USER CODE END PV */
  72:Src/main.c    **** 
  73:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  74:Src/main.c    **** void SystemClock_Config(void);
  75:Src/main.c    **** /* USER CODE BEGIN PFP */
  76:Src/main.c    **** 
  77:Src/main.c    **** /* USER CODE END PFP */
  78:Src/main.c    **** 
  79:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  80:Src/main.c    **** /* USER CODE BEGIN 0 */
  81:Src/main.c    **** 
  82:Src/main.c    **** /* USER CODE END 0 */
  83:Src/main.c    **** 
  84:Src/main.c    **** /**
  85:Src/main.c    ****   * @brief  The application entry point.
  86:Src/main.c    ****   * @retval int
  87:Src/main.c    ****   */
ARM GAS  /tmp/cc9yrPe9.s 			page 3


  88:Src/main.c    **** int main(void)
  89:Src/main.c    **** {
  90:Src/main.c    ****   /* USER CODE BEGIN 1 */
  91:Src/main.c    **** 
  92:Src/main.c    ****   /* USER CODE END 1 */
  93:Src/main.c    **** 
  94:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  95:Src/main.c    **** 
  96:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  97:Src/main.c    ****   HAL_Init();
  98:Src/main.c    **** 
  99:Src/main.c    ****   /* USER CODE BEGIN Init */
 100:Src/main.c    ****  
 101:Src/main.c    **** 
 102:Src/main.c    ****   /* USER CODE END Init */
 103:Src/main.c    **** 
 104:Src/main.c    ****   /* Configure the system clock */
 105:Src/main.c    ****   SystemClock_Config();
 106:Src/main.c    **** 
 107:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 108:Src/main.c    **** 
 109:Src/main.c    ****   /* USER CODE END SysInit */
 110:Src/main.c    **** 
 111:Src/main.c    ****   /* Initialize all configured peripherals */
 112:Src/main.c    ****   MX_GPIO_Init();
 113:Src/main.c    ****   MX_TIM2_Init();
 114:Src/main.c    ****   MX_USART6_Init();
 115:Src/main.c    ****   MX_USART2_Init();
 116:Src/main.c    ****   /* USER CODE BEGIN 2 */
 117:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim2);
 118:Src/main.c    **** 
 119:Src/main.c    ****   long int EncVal;
 120:Src/main.c    **** /*  int i=0;
 121:Src/main.c    ****   typedef struct Encoder_S{
 122:Src/main.c    ****   volatile int last;
 123:Src/main.c    ****   volatile int current;
 124:Src/main.c    ****   volatile int dl;
 125:Src/main.c    ****   volatile int cnt;
 126:Src/main.c    **** 
 127:Src/main.c    **** }Encoder;
 128:Src/main.c    **** Encoder encoder;
 129:Src/main.c    **** 
 130:Src/main.c    ****   void HAL_TIM_IC_CaptureCallback (Encoder encoder)
 131:Src/main.c    **** {
 132:Src/main.c    ****   if(htim2.Instance == htim2.Instance)
 133:Src/main.c    ****   {
 134:Src/main.c    ****     //HAL_GPIO_TogglePin(LD2_GPIO_Port, LD2_Pin);
 135:Src/main.c    **** 
 136:Src/main.c    ****     encoder.last = encoder.current;
 137:Src/main.c    ****     encoder.current = htim2.Instance->CNT;
 138:Src/main.c    **** 
 139:Src/main.c    ****     int dl = encoder.current - encoder.last;
 140:Src/main.c    ****     
 141:Src/main.c    ****      * current = last+1 : +1
 142:Src/main.c    ****      * current = last : 0
 143:Src/main.c    ****      * current = last-1 : -1
 144:Src/main.c    ****      * current = 0, last = ARR : +1
ARM GAS  /tmp/cc9yrPe9.s 			page 4


 145:Src/main.c    ****      * current = ARR, last = 0 : -1
 146:Src/main.c    ****      
 147:Src/main.c    ****      
 148:Src/main.c    ****     if(dl > 1){
 149:Src/main.c    ****       dl = -1;
 150:Src/main.c    ****     }else if(dl < -1){
 151:Src/main.c    ****       dl = +1;
 152:Src/main.c    ****     }
 153:Src/main.c    ****     encoder.dl = dl;
 154:Src/main.c    ****     encoder.cnt += dl;
 155:Src/main.c    ****   }
 156:Src/main.c    **** }*/
 157:Src/main.c    ****   /* USER CODE END 2 */
 158:Src/main.c    **** 
 159:Src/main.c    ****   /* Infinite loop */
 160:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 161:Src/main.c    ****   while (1)
 162:Src/main.c    ****   { 
 163:Src/main.c    ****     
 164:Src/main.c    ****     EncVal=5;
 165:Src/main.c    ****    // EncVal =__HAL_TIM_GET_COUNTER(&htim2);
 166:Src/main.c    ****     //HAL_TIM_IC_CaptureCallback(encoder);
 167:Src/main.c    ****     printf("%ld %ld \n",EncVal,(&htim2)->Instance->CNT);
 168:Src/main.c    ****     /*//__HAL_TIM_SET_COUNTER(htim2->Instance->CNT);
 169:Src/main.c    ****     printf("Encoder -> %d ou %d,essai %d,%ld \n\r",encoder.cnt , encoder.dl,i,TIM2->CNT);
 170:Src/main.c    ****     printf("%ld\n",__HAL_TIM_GET_COUNTER(htim2) ((htim2).Instance->CNT));
 171:Src/main.c    ****     *///HAL_GPIO_WritePin(encodeur1_2_GPIO_Port,encodeur1_2_Pin,EncVal);
 172:Src/main.c    ****     /* USER CODE END WHILE */
 173:Src/main.c    **** 
 174:Src/main.c    ****     /* USER CODE BEGIN 3 */
 175:Src/main.c    ****    // HAL_Delay(500);
 176:Src/main.c    **** 
 177:Src/main.c    ****   }
 178:Src/main.c    ****   /* USER CODE END 3 */
 179:Src/main.c    **** }
 180:Src/main.c    **** 
 181:Src/main.c    **** /**
 182:Src/main.c    ****   * @brief System Clock Configuration
 183:Src/main.c    ****   * @retval None
 184:Src/main.c    ****   */
 185:Src/main.c    **** void SystemClock_Config(void)
 186:Src/main.c    **** {
  29              		.loc 1 186 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 80
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 30B5     		push	{r4, r5, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 12
  36              		.cfi_offset 4, -12
  37              		.cfi_offset 5, -8
  38              		.cfi_offset 14, -4
  39 0002 95B0     		sub	sp, sp, #84
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 96
 187:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  42              		.loc 1 187 3 view .LVU1
ARM GAS  /tmp/cc9yrPe9.s 			page 5


  43              		.loc 1 187 22 is_stmt 0 view .LVU2
  44 0004 3022     		movs	r2, #48
  45 0006 0021     		movs	r1, #0
  46 0008 08A8     		add	r0, sp, #32
  47 000a FFF7FEFF 		bl	memset
  48              	.LVL0:
 188:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  49              		.loc 1 188 3 is_stmt 1 view .LVU3
  50              		.loc 1 188 22 is_stmt 0 view .LVU4
  51 000e 0024     		movs	r4, #0
  52 0010 0394     		str	r4, [sp, #12]
  53 0012 0494     		str	r4, [sp, #16]
  54 0014 0594     		str	r4, [sp, #20]
  55 0016 0694     		str	r4, [sp, #24]
  56 0018 0794     		str	r4, [sp, #28]
 189:Src/main.c    **** 
 190:Src/main.c    ****   /**Configure the main internal regulator output voltage 
 191:Src/main.c    ****   */
 192:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
  57              		.loc 1 192 3 is_stmt 1 view .LVU5
  58              	.LBB2:
  59              		.loc 1 192 3 view .LVU6
  60 001a 0194     		str	r4, [sp, #4]
  61              		.loc 1 192 3 view .LVU7
  62 001c 1B4B     		ldr	r3, .L3
  63 001e 1A6C     		ldr	r2, [r3, #64]
  64 0020 42F08052 		orr	r2, r2, #268435456
  65 0024 1A64     		str	r2, [r3, #64]
  66              		.loc 1 192 3 view .LVU8
  67 0026 1B6C     		ldr	r3, [r3, #64]
  68 0028 03F08053 		and	r3, r3, #268435456
  69 002c 0193     		str	r3, [sp, #4]
  70              		.loc 1 192 3 view .LVU9
  71 002e 019B     		ldr	r3, [sp, #4]
  72              	.LBE2:
 193:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
  73              		.loc 1 193 3 view .LVU10
  74              	.LBB3:
  75              		.loc 1 193 3 view .LVU11
  76 0030 0294     		str	r4, [sp, #8]
  77              		.loc 1 193 3 view .LVU12
  78 0032 174A     		ldr	r2, .L3+4
  79 0034 1368     		ldr	r3, [r2]
  80 0036 23F44043 		bic	r3, r3, #49152
  81 003a 43F40043 		orr	r3, r3, #32768
  82 003e 1360     		str	r3, [r2]
  83              		.loc 1 193 3 view .LVU13
  84 0040 1368     		ldr	r3, [r2]
  85 0042 03F44043 		and	r3, r3, #49152
  86 0046 0293     		str	r3, [sp, #8]
  87              		.loc 1 193 3 view .LVU14
  88 0048 029B     		ldr	r3, [sp, #8]
  89              	.LBE3:
 194:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks 
 195:Src/main.c    ****   */
 196:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
  90              		.loc 1 196 3 view .LVU15
ARM GAS  /tmp/cc9yrPe9.s 			page 6


  91              		.loc 1 196 36 is_stmt 0 view .LVU16
  92 004a 0225     		movs	r5, #2
  93 004c 0895     		str	r5, [sp, #32]
 197:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  94              		.loc 1 197 3 is_stmt 1 view .LVU17
  95              		.loc 1 197 30 is_stmt 0 view .LVU18
  96 004e 0123     		movs	r3, #1
  97 0050 0B93     		str	r3, [sp, #44]
 198:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
  98              		.loc 1 198 3 is_stmt 1 view .LVU19
  99              		.loc 1 198 41 is_stmt 0 view .LVU20
 100 0052 1023     		movs	r3, #16
 101 0054 0C93     		str	r3, [sp, #48]
 199:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 102              		.loc 1 199 3 is_stmt 1 view .LVU21
 103              		.loc 1 199 34 is_stmt 0 view .LVU22
 104 0056 0E95     		str	r5, [sp, #56]
 200:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 105              		.loc 1 200 3 is_stmt 1 view .LVU23
 106              		.loc 1 200 35 is_stmt 0 view .LVU24
 107 0058 0F94     		str	r4, [sp, #60]
 201:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 108              		.loc 1 201 3 is_stmt 1 view .LVU25
 109              		.loc 1 201 30 is_stmt 0 view .LVU26
 110 005a 0823     		movs	r3, #8
 111 005c 1093     		str	r3, [sp, #64]
 202:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 84;
 112              		.loc 1 202 3 is_stmt 1 view .LVU27
 113              		.loc 1 202 30 is_stmt 0 view .LVU28
 114 005e 5423     		movs	r3, #84
 115 0060 1193     		str	r3, [sp, #68]
 203:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 116              		.loc 1 203 3 is_stmt 1 view .LVU29
 117              		.loc 1 203 30 is_stmt 0 view .LVU30
 118 0062 1295     		str	r5, [sp, #72]
 204:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 119              		.loc 1 204 3 is_stmt 1 view .LVU31
 120              		.loc 1 204 30 is_stmt 0 view .LVU32
 121 0064 0423     		movs	r3, #4
 122 0066 1393     		str	r3, [sp, #76]
 205:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 123              		.loc 1 205 3 is_stmt 1 view .LVU33
 124              		.loc 1 205 7 is_stmt 0 view .LVU34
 125 0068 08A8     		add	r0, sp, #32
 126 006a FFF7FEFF 		bl	HAL_RCC_OscConfig
 127              	.LVL1:
 206:Src/main.c    ****   {
 207:Src/main.c    ****     Error_Handler();
 208:Src/main.c    ****   }
 209:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks 
 210:Src/main.c    ****   */
 211:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 128              		.loc 1 211 3 is_stmt 1 view .LVU35
 129              		.loc 1 211 31 is_stmt 0 view .LVU36
 130 006e 0F23     		movs	r3, #15
 131 0070 0393     		str	r3, [sp, #12]
 212:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
ARM GAS  /tmp/cc9yrPe9.s 			page 7


 213:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 132              		.loc 1 213 3 is_stmt 1 view .LVU37
 133              		.loc 1 213 34 is_stmt 0 view .LVU38
 134 0072 0495     		str	r5, [sp, #16]
 214:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 135              		.loc 1 214 3 is_stmt 1 view .LVU39
 136              		.loc 1 214 35 is_stmt 0 view .LVU40
 137 0074 0594     		str	r4, [sp, #20]
 215:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 138              		.loc 1 215 3 is_stmt 1 view .LVU41
 139              		.loc 1 215 36 is_stmt 0 view .LVU42
 140 0076 4FF48053 		mov	r3, #4096
 141 007a 0693     		str	r3, [sp, #24]
 216:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 142              		.loc 1 216 3 is_stmt 1 view .LVU43
 143              		.loc 1 216 36 is_stmt 0 view .LVU44
 144 007c 0794     		str	r4, [sp, #28]
 217:Src/main.c    **** 
 218:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 145              		.loc 1 218 3 is_stmt 1 view .LVU45
 146              		.loc 1 218 7 is_stmt 0 view .LVU46
 147 007e 2946     		mov	r1, r5
 148 0080 03A8     		add	r0, sp, #12
 149 0082 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 150              	.LVL2:
 219:Src/main.c    ****   {
 220:Src/main.c    ****     Error_Handler();
 221:Src/main.c    ****   }
 222:Src/main.c    **** }
 151              		.loc 1 222 1 view .LVU47
 152 0086 15B0     		add	sp, sp, #84
 153              	.LCFI2:
 154              		.cfi_def_cfa_offset 12
 155              		@ sp needed
 156 0088 30BD     		pop	{r4, r5, pc}
 157              	.L4:
 158 008a 00BF     		.align	2
 159              	.L3:
 160 008c 00380240 		.word	1073887232
 161 0090 00700040 		.word	1073770496
 162              		.cfi_endproc
 163              	.LFE127:
 165              		.section	.text.main,"ax",%progbits
 166              		.align	1
 167              		.global	main
 168              		.syntax unified
 169              		.thumb
 170              		.thumb_func
 171              		.fpu fpv4-sp-d16
 173              	main:
 174              	.LFB126:
  89:Src/main.c    ****   /* USER CODE BEGIN 1 */
 175              		.loc 1 89 1 is_stmt 1 view -0
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 0
 178              		@ frame_needed = 0, uses_anonymous_args = 0
 179 0000 08B5     		push	{r3, lr}
ARM GAS  /tmp/cc9yrPe9.s 			page 8


 180              	.LCFI3:
 181              		.cfi_def_cfa_offset 8
 182              		.cfi_offset 3, -8
 183              		.cfi_offset 14, -4
  97:Src/main.c    **** 
 184              		.loc 1 97 3 view .LVU49
 185 0002 FFF7FEFF 		bl	HAL_Init
 186              	.LVL3:
 105:Src/main.c    **** 
 187              		.loc 1 105 3 view .LVU50
 188 0006 FFF7FEFF 		bl	SystemClock_Config
 189              	.LVL4:
 112:Src/main.c    ****   MX_TIM2_Init();
 190              		.loc 1 112 3 view .LVU51
 191 000a FFF7FEFF 		bl	MX_GPIO_Init
 192              	.LVL5:
 113:Src/main.c    ****   MX_USART6_Init();
 193              		.loc 1 113 3 view .LVU52
 194 000e FFF7FEFF 		bl	MX_TIM2_Init
 195              	.LVL6:
 114:Src/main.c    ****   MX_USART2_Init();
 196              		.loc 1 114 3 view .LVU53
 197 0012 FFF7FEFF 		bl	MX_USART6_Init
 198              	.LVL7:
 115:Src/main.c    ****   /* USER CODE BEGIN 2 */
 199              		.loc 1 115 3 view .LVU54
 200 0016 FFF7FEFF 		bl	MX_USART2_Init
 201              	.LVL8:
 117:Src/main.c    **** 
 202              		.loc 1 117 3 view .LVU55
 203 001a 0548     		ldr	r0, .L8
 204 001c FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 205              	.LVL9:
 206              	.L6:
 119:Src/main.c    **** /*  int i=0;
 207              		.loc 1 119 3 discriminator 1 view .LVU56
 161:Src/main.c    ****   { 
 208              		.loc 1 161 3 discriminator 1 view .LVU57
 164:Src/main.c    ****    // EncVal =__HAL_TIM_GET_COUNTER(&htim2);
 209              		.loc 1 164 5 discriminator 1 view .LVU58
 167:Src/main.c    ****     /*//__HAL_TIM_SET_COUNTER(htim2->Instance->CNT);
 210              		.loc 1 167 5 discriminator 1 view .LVU59
 167:Src/main.c    ****     /*//__HAL_TIM_SET_COUNTER(htim2->Instance->CNT);
 211              		.loc 1 167 40 is_stmt 0 discriminator 1 view .LVU60
 212 0020 034B     		ldr	r3, .L8
 213 0022 1B68     		ldr	r3, [r3]
 167:Src/main.c    ****     /*//__HAL_TIM_SET_COUNTER(htim2->Instance->CNT);
 214              		.loc 1 167 5 discriminator 1 view .LVU61
 215 0024 5A6A     		ldr	r2, [r3, #36]
 216 0026 0521     		movs	r1, #5
 217 0028 0248     		ldr	r0, .L8+4
 218 002a FFF7FEFF 		bl	printf
 219              	.LVL10:
 220 002e F7E7     		b	.L6
 221              	.L9:
 222              		.align	2
 223              	.L8:
ARM GAS  /tmp/cc9yrPe9.s 			page 9


 224 0030 00000000 		.word	htim2
 225 0034 00000000 		.word	.LC0
 226              		.cfi_endproc
 227              	.LFE126:
 229              		.section	.text.__io_putchar,"ax",%progbits
 230              		.align	1
 231              		.global	__io_putchar
 232              		.syntax unified
 233              		.thumb
 234              		.thumb_func
 235              		.fpu fpv4-sp-d16
 237              	__io_putchar:
 238              	.LVL11:
 239              	.LFB128:
 223:Src/main.c    **** 
 224:Src/main.c    **** /* USER CODE BEGIN 4 */
 225:Src/main.c    **** int __io_putchar(int ch)
 226:Src/main.c    **** {
 240              		.loc 1 226 1 is_stmt 1 view -0
 241              		.cfi_startproc
 242              		@ args = 0, pretend = 0, frame = 8
 243              		@ frame_needed = 0, uses_anonymous_args = 0
 244              		.loc 1 226 1 is_stmt 0 view .LVU63
 245 0000 10B5     		push	{r4, lr}
 246              	.LCFI4:
 247              		.cfi_def_cfa_offset 8
 248              		.cfi_offset 4, -8
 249              		.cfi_offset 14, -4
 250 0002 82B0     		sub	sp, sp, #8
 251              	.LCFI5:
 252              		.cfi_def_cfa_offset 16
 253 0004 0446     		mov	r4, r0
 227:Src/main.c    ****  uint8_t c[1];
 254              		.loc 1 227 2 is_stmt 1 view .LVU64
 228:Src/main.c    ****  c[0] = ch & 0x00FF;
 255              		.loc 1 228 2 view .LVU65
 256              		.loc 1 228 7 is_stmt 0 view .LVU66
 257 0006 8DF80400 		strb	r0, [sp, #4]
 229:Src/main.c    ****  HAL_USART_Transmit(&husart2, &*c, 1, 10);
 258              		.loc 1 229 2 is_stmt 1 view .LVU67
 259 000a 0A23     		movs	r3, #10
 260 000c 0122     		movs	r2, #1
 261 000e 01A9     		add	r1, sp, #4
 262 0010 0248     		ldr	r0, .L12
 263              	.LVL12:
 264              		.loc 1 229 2 is_stmt 0 view .LVU68
 265 0012 FFF7FEFF 		bl	HAL_USART_Transmit
 266              	.LVL13:
 230:Src/main.c    ****  return ch;
 267              		.loc 1 230 2 is_stmt 1 view .LVU69
 231:Src/main.c    **** }
 268              		.loc 1 231 1 is_stmt 0 view .LVU70
 269 0016 2046     		mov	r0, r4
 270 0018 02B0     		add	sp, sp, #8
 271              	.LCFI6:
 272              		.cfi_def_cfa_offset 8
 273              		@ sp needed
ARM GAS  /tmp/cc9yrPe9.s 			page 10


 274 001a 10BD     		pop	{r4, pc}
 275              	.LVL14:
 276              	.L13:
 277              		.loc 1 231 1 view .LVU71
 278              		.align	2
 279              	.L12:
 280 001c 00000000 		.word	husart2
 281              		.cfi_endproc
 282              	.LFE128:
 284              		.section	.text._write,"ax",%progbits
 285              		.align	1
 286              		.global	_write
 287              		.syntax unified
 288              		.thumb
 289              		.thumb_func
 290              		.fpu fpv4-sp-d16
 292              	_write:
 293              	.LVL15:
 294              	.LFB129:
 232:Src/main.c    **** 
 233:Src/main.c    **** int _write(int file,char *ptr, int len)
 234:Src/main.c    **** {
 295              		.loc 1 234 1 is_stmt 1 view -0
 296              		.cfi_startproc
 297              		@ args = 0, pretend = 0, frame = 0
 298              		@ frame_needed = 0, uses_anonymous_args = 0
 299              		.loc 1 234 1 is_stmt 0 view .LVU73
 300 0000 70B5     		push	{r4, r5, r6, lr}
 301              	.LCFI7:
 302              		.cfi_def_cfa_offset 16
 303              		.cfi_offset 4, -16
 304              		.cfi_offset 5, -12
 305              		.cfi_offset 6, -8
 306              		.cfi_offset 14, -4
 307 0002 0C46     		mov	r4, r1
 308 0004 1646     		mov	r6, r2
 235:Src/main.c    ****  int DataIdx;
 309              		.loc 1 235 2 is_stmt 1 view .LVU74
 236:Src/main.c    ****  for(DataIdx= 0; DataIdx< len; DataIdx++)
 310              		.loc 1 236 2 view .LVU75
 311              	.LVL16:
 312              		.loc 1 236 13 is_stmt 0 view .LVU76
 313 0006 0025     		movs	r5, #0
 314              	.LVL17:
 315              	.L15:
 316              		.loc 1 236 2 discriminator 1 view .LVU77
 317 0008 B542     		cmp	r5, r6
 318 000a 05DA     		bge	.L18
 237:Src/main.c    ****  {
 238:Src/main.c    ****  __io_putchar(*ptr++);
 319              		.loc 1 238 2 is_stmt 1 discriminator 3 view .LVU78
 320              		.loc 1 238 2 is_stmt 0 discriminator 3 view .LVU79
 321 000c 14F8010B 		ldrb	r0, [r4], #1	@ zero_extendqisi2
 322              	.LVL18:
 323              		.loc 1 238 2 discriminator 3 view .LVU80
 324 0010 FFF7FEFF 		bl	__io_putchar
 325              	.LVL19:
ARM GAS  /tmp/cc9yrPe9.s 			page 11


 236:Src/main.c    ****  for(DataIdx= 0; DataIdx< len; DataIdx++)
 326              		.loc 1 236 39 discriminator 3 view .LVU81
 327 0014 0135     		adds	r5, r5, #1
 328              	.LVL20:
 236:Src/main.c    ****  for(DataIdx= 0; DataIdx< len; DataIdx++)
 329              		.loc 1 236 39 discriminator 3 view .LVU82
 330 0016 F7E7     		b	.L15
 331              	.LVL21:
 332              	.L18:
 239:Src/main.c    ****  }
 240:Src/main.c    **** return len;
 333              		.loc 1 240 1 is_stmt 1 view .LVU83
 241:Src/main.c    **** }
 334              		.loc 1 241 1 is_stmt 0 view .LVU84
 335 0018 3046     		mov	r0, r6
 336 001a 70BD     		pop	{r4, r5, r6, pc}
 337              		.loc 1 241 1 view .LVU85
 338              		.cfi_endproc
 339              	.LFE129:
 341              		.section	.text.Error_Handler,"ax",%progbits
 342              		.align	1
 343              		.global	Error_Handler
 344              		.syntax unified
 345              		.thumb
 346              		.thumb_func
 347              		.fpu fpv4-sp-d16
 349              	Error_Handler:
 350              	.LFB130:
 242:Src/main.c    **** /* USER CODE END 4 */
 243:Src/main.c    **** 
 244:Src/main.c    **** /**
 245:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 246:Src/main.c    ****   * @retval None
 247:Src/main.c    ****   */
 248:Src/main.c    **** void Error_Handler(void)
 249:Src/main.c    **** {
 351              		.loc 1 249 1 is_stmt 1 view -0
 352              		.cfi_startproc
 353              		@ args = 0, pretend = 0, frame = 0
 354              		@ frame_needed = 0, uses_anonymous_args = 0
 355              		@ link register save eliminated.
 250:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 251:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 252:Src/main.c    **** 
 253:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 254:Src/main.c    **** }
 356              		.loc 1 254 1 view .LVU87
 357 0000 7047     		bx	lr
 358              		.cfi_endproc
 359              	.LFE130:
 361              		.global	nLoop
 362              		.section	.bss.nLoop,"aw",%nobits
 363              		.align	2
 366              	nLoop:
 367 0000 00000000 		.space	4
 368              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 369              		.align	2
ARM GAS  /tmp/cc9yrPe9.s 			page 12


 370              	.LC0:
 371 0000 256C6420 		.ascii	"%ld %ld \012\000"
 371      256C6420 
 371      0A00
 372              		.text
 373              	.Letext0:
 374              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 375              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 376              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 377              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 378              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 379              		.file 7 "/usr/arm-none-eabi/include/sys/lock.h"
 380              		.file 8 "/usr/arm-none-eabi/include/sys/_types.h"
 381              		.file 9 "/usr/lib/gcc/arm-none-eabi/8.3.0/include/stddef.h"
 382              		.file 10 "/usr/arm-none-eabi/include/sys/reent.h"
 383              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 384              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 385              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 386              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 387              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 388              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_usart.h"
 389              		.file 17 "Inc/tim.h"
 390              		.file 18 "Inc/usart.h"
 391              		.file 19 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 392              		.file 20 "Inc/gpio.h"
 393              		.file 21 "/usr/arm-none-eabi/include/stdio.h"
 394              		.file 22 "<built-in>"
ARM GAS  /tmp/cc9yrPe9.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cc9yrPe9.s:18     .text.SystemClock_Config:0000000000000000 $t
     /tmp/cc9yrPe9.s:26     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cc9yrPe9.s:160    .text.SystemClock_Config:000000000000008c $d
     /tmp/cc9yrPe9.s:166    .text.main:0000000000000000 $t
     /tmp/cc9yrPe9.s:173    .text.main:0000000000000000 main
     /tmp/cc9yrPe9.s:224    .text.main:0000000000000030 $d
     /tmp/cc9yrPe9.s:230    .text.__io_putchar:0000000000000000 $t
     /tmp/cc9yrPe9.s:237    .text.__io_putchar:0000000000000000 __io_putchar
     /tmp/cc9yrPe9.s:280    .text.__io_putchar:000000000000001c $d
     /tmp/cc9yrPe9.s:285    .text._write:0000000000000000 $t
     /tmp/cc9yrPe9.s:292    .text._write:0000000000000000 _write
     /tmp/cc9yrPe9.s:342    .text.Error_Handler:0000000000000000 $t
     /tmp/cc9yrPe9.s:349    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/cc9yrPe9.s:366    .bss.nLoop:0000000000000000 nLoop
     /tmp/cc9yrPe9.s:363    .bss.nLoop:0000000000000000 $d
     /tmp/cc9yrPe9.s:369    .rodata.main.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_TIM2_Init
MX_USART6_Init
MX_USART2_Init
HAL_TIM_Base_Start_IT
printf
htim2
HAL_USART_Transmit
husart2
